package filesplit;

import java.io.*;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class FileSplit {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the file path: ");
        String filePath = scanner.nextLine();

        System.out.print("Enter the number of lines per part: ");
        int linesPerPart = scanner.nextInt();

        Queue<String> queue = new LinkedList<>();
        BufferedReader reader = null;

        try {
            reader = new BufferedReader(new FileReader(filePath));
            String line;
            int lineCount = 0;
            int partNumber = 1;
            while ((line = reader.readLine()) != null) {
                queue.add(line);
                lineCount++;
                if (lineCount == linesPerPart) {
                    writePartToFile(queue, partNumber);
                    partNumber++;
                    lineCount = 0;  
                }
            }
            if (!queue.isEmpty()) {
                writePartToFile(queue, partNumber);
            }

            System.out.println("File split completed.");
        } catch (IOException e) {
        } finally {
            try {
                if (reader != null) {
                    reader.close();
                }
            } catch (IOException e) {
            }
        }
    }
    private static void writePartToFile(Queue<String> queue, int partNumber) {
        String partFileName = "part_" + partNumber + ".txt";
        BufferedWriter writer = null;

        try {
            writer = new BufferedWriter(new FileWriter(partFileName));
            while (!queue.isEmpty()) {
                writer.write(queue.poll());
                writer.newLine();
            }
            System.out.println("Written part " + partNumber + " to " + partFileName);
        } catch (IOException e) {
        } finally {
            try {
                if (writer != null) {
                    writer.close();
                }
            } catch (IOException e) {
            }
        }
    }
}
